// This file is based on
// the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.

/**
 * Memory of 64 registers, each 8 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP MEM64 {
    IN in[8], load, address[6];
    OUT out[8];

    PARTS:
    DMux8Way(in=load,sel=address[3..5],a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
    MEM8(in=in,load=a,address=address[0..2],out=oa);
    MEM8(in=in,load=b,address=address[0..2],out=ob);
    MEM8(in=in,load=c,address=address[0..2],out=oc);
    MEM8(in=in,load=d,address=address[0..2],out=od);
    MEM8(in=in,load=e,address=address[0..2],out=oe);
    MEM8(in=in,load=f,address=address[0..2],out=of);
    MEM8(in=in,load=g,address=address[0..2],out=og);
    MEM8(in=in,load=h,address=address[0..2],out=oh);
    Mux8Way8(a=oa,b=ob,c=oc,d=od,e=oe,f=of,g=og,h=oh,sel=address[3..5],out=out);
}
